[{"title":"Synthetic","type":0,"sectionRef":"#","url":"api/Synthetic","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Synthetic","url":"api/Synthetic#types","content":" "},{"title":"Components​","type":1,"pageTitle":"Synthetic","url":"api/Synthetic#Components","content":"&lt;/&gt; interface Components { Button: Button }  "},{"title":"intro","type":0,"sectionRef":"#","url":"docs/intro","content":"","keywords":""},{"title":"Synthetic​","type":1,"pageTitle":"intro","url":"docs/intro#synthetic","content":"Material UI inspired elements ported to Fusion! You can read all you need to know about Material UI design here! The basic idea is to create a library of reusable UI elements that are configurable through changing Roblox attributes on the element, thus allowing easier real-time prototyping and better encapsulation. "},{"title":"Using Synthetic​","type":1,"pageTitle":"intro","url":"docs/intro#using-synthetic","content":""},{"title":"Installation:​","type":1,"pageTitle":"intro","url":"docs/intro#installation","content":"Add to your wally.toml file the synthetic release listed here: https://github.com/UpliftGames/wally-index/tree/main/nightcycle If you don't use wally this is your wake-up call to do so, however for those who don't want to go through the install process I'll be uploading a RBXM file whenever I make an announcement on the DevForum. "},{"title":"Atoms, Molecules, Organisms, & Templates​","type":1,"pageTitle":"intro","url":"docs/intro#atoms-molecules-organisms--templates","content":"Synthetic uses Atomic design to organize its components. You can read more about it here but the gist is atoms can't use other Synthetic components, molecules can only use atoms, organisms can use molecules + atoms, and templates can use organisms + molecules + atoms. "},{"title":"Usage Example​","type":1,"pageTitle":"intro","url":"docs/intro#usage-example","content":"As you may have guessed, in order to use this UI library on the client you need to require it on the client &lt;! client &gt; local Synthetic = require(Insert_Path_To_Module_Here)local newElement = Synthetic.New(Insert_Element_Name_Here)(Insert_Configuration_Table_Here) Unlike most UI libraries, Synthetic also needs to be required by the server - this is because of the text filtering server dependencies. &lt;! server &gt; local Synthetic = require(Insert_Path_To_Module_Here) "},{"title":"Attributes & BindableEvents/Functions​","type":1,"pageTitle":"intro","url":"docs/intro#attributes--bindableeventsfunctions","content":"Attributes are meant to serve as custom public-facing properties, allowing you easy configuration at later points using other scripts. Various modules also include bindable instances which allow for the tracking of events and calling of relevant functions. The dream is that you'll be able to use this similar to any native Roblox instance. "},{"title":"It's a Fusion Wrapper​","type":1,"pageTitle":"intro","url":"docs/intro#its-a-fusion-wrapper","content":"The final Synthetic library is bundled on-top of Fusion, this means that any call you could make to Fusion can be made to Synthetic in the same manner. "},{"title":"Long Term Goals​","type":1,"pageTitle":"intro","url":"docs/intro#long-term-goals","content":"Basic Stewardship​ Improve documentationImprove component appearance, performance, &amp; stabilityClean up the code to be a bit more readable, documented, and less hacky whenever possibleAdd more imperative functionality for existing elements. New Features​ Allow for the native calling of official material icons by name, as well as allowing for specifying filled / outlined variants.Allow for users to publish and easily subscribe / import other user's published components. "},{"title":"Enjoy!​","type":1,"pageTitle":"intro","url":"docs/intro#enjoy","content":"If you felt this library helped you out, any contributions to my patreon are appreciated! Thanks! "},{"title":"Button","type":0,"sectionRef":"#","url":"api/Button","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Button","url":"api/Button#properties","content":" "},{"title":"Variant​","type":1,"pageTitle":"Button","url":"api/Button#Variant","content":"&lt;/&gt; Button.Variant: SynthEnumItem The style of construction as detailed here, excluding &quot;Toggle button&quot;  "},{"title":"Typography​","type":1,"pageTitle":"Button","url":"api/Button#Typography","content":"&lt;/&gt; Button.Typography: Typography The Typography to be used for this component  "},{"title":"Text​","type":1,"pageTitle":"Button","url":"api/Button#Text","content":"&lt;/&gt; Button.Text: string Text that fills the button  "},{"title":"Tooltip​","type":1,"pageTitle":"Button","url":"api/Button#Tooltip","content":"&lt;/&gt; Button.Tooltip: string Text that appears when the cursor hovers over button  "},{"title":"TooltipDirection​","type":1,"pageTitle":"Button","url":"api/Button#TooltipDirection","content":"&lt;/&gt; Button.TooltipDirection: string What anchor point on the button should be used to display  "},{"title":"Color​","type":1,"pageTitle":"Button","url":"api/Button#Color","content":"&lt;/&gt; Button.Color: Color3  Color used for non-text areas of button  "},{"title":"TextColor​","type":1,"pageTitle":"Button","url":"api/Button#TextColor","content":"&lt;/&gt; Button.TextColor: Color3  Color used for text  "},{"title":"Image​","type":1,"pageTitle":"Button","url":"api/Button#Image","content":"&lt;/&gt; Button.Image: string Roblox Asset URL used to load in an icon's custom texture  "},{"title":"ImageRectSize​","type":1,"pageTitle":"Button","url":"api/Button#ImageRectSize","content":"&lt;/&gt; Button.ImageRectSize: Vector2  How big the icon's sprite-sheet cells are  "},{"title":"ImageRectOffset​","type":1,"pageTitle":"Button","url":"api/Button#ImageRectOffset","content":"&lt;/&gt; Button.ImageRectOffset: Vector2  What position on a sprite-sheet should an icon be grabbed from  "},{"title":"SynthClassName​","type":1,"pageTitle":"Button","url":"api/Button#SynthClassName","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Button.SynthClassName: string Read-Only attribute used to identify what type of component it is "}]