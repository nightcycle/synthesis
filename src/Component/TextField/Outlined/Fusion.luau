--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))
local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type FusionCanBeState<V> = Translators.FusionCanBeState<V>

-- Constants
-- Variables
-- References
-- Private Functions
-- Class
local Interface = {}

function Interface.new(
	onSubmit: FusionCanBeState<(text: string?) -> string?>,
	onInput: FusionCanBeState<(text: string?) -> string?>,
	initialText: FusionCanBeState<string?>,
	isEnabled: FusionCanBeState<boolean>,
	isError: FusionCanBeState<boolean>,
	label: FusionCanBeState<string>,
	characterLimit: FusionCanBeState<number?>,
	supportingText: FusionCanBeState<string?>,
	icon: FusionCanBeState<ImageData?>,
	hightlightColor: FusionCanBeState<Color3>,
	errorColor: FusionCanBeState<Color3>,
	borderColor: FusionCanBeState<Color3>,
	textColor: FusionCanBeState<Color3>,
	labelColor: FusionCanBeState<Color3>,
	elevation: FusionCanBeState<number>,
	schemeType: FusionCanBeState<Enums.SchemeType>,
	bodyFontData: FusionCanBeState<FontData>,
	supportFontData: FusionCanBeState<FontData>,
	scale: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.new(
		convert(onSubmit),
		convert(onInput),
		convert(initialText),
		convert(isEnabled),
		convert(isError),
		convert(label),
		convert(characterLimit),
		convert(supportingText),
		convert(icon),
		convert(hightlightColor),
		convert(errorColor),
		convert(borderColor),
		convert(textColor),
		convert(labelColor),
		convert(elevation),
		convert(schemeType),
		convert(bodyFontData),
		convert(supportFontData),
		convert(scale)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.primary(
	style: FusionCanBeState<Style>,
	onSubmit: FusionCanBeState<(text: string?) -> string?>,
	label: FusionCanBeState<string>,
	initialText: FusionCanBeState<string?>,
	onInput: FusionCanBeState<(((text: string?) -> string?)?)>,
	supportingText: FusionCanBeState<string?>,
	icon: FusionCanBeState<ImageData?>,
	characterLimit: FusionCanBeState<number?>,
	isError: FusionCanBeState<boolean?>,
	elevation: FusionCanBeState<number?>,
	isEnabled: FusionCanBeState<boolean?>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.primary(
		convert(style),
		convert(onSubmit),
		convert(label),
		convert(initialText),
		convert(onInput),
		convert(supportingText),
		convert(icon),
		convert(characterLimit),
		convert(isError),
		convert(elevation),
		convert(isEnabled)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.secondary(
	style: FusionCanBeState<Style>,
	onSubmit: FusionCanBeState<(text: string?) -> string?>,
	label: FusionCanBeState<string>,
	initialText: FusionCanBeState<string?>,
	onInput: FusionCanBeState<(((text: string?) -> string?)?)>,
	supportingText: FusionCanBeState<string?>,
	icon: FusionCanBeState<ImageData?>,
	characterLimit: FusionCanBeState<number?>,
	isError: FusionCanBeState<boolean?>,
	elevation: FusionCanBeState<number?>,
	isEnabled: FusionCanBeState<boolean?>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.secondary(
		convert(style),
		convert(onSubmit),
		convert(label),
		convert(initialText),
		convert(onInput),
		convert(supportingText),
		convert(icon),
		convert(characterLimit),
		convert(isError),
		convert(elevation),
		convert(isEnabled)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.tertiary(
	style: FusionCanBeState<Style>,
	onSubmit: FusionCanBeState<(text: string?) -> string?>,
	label: FusionCanBeState<string>,
	initialText: FusionCanBeState<string?>,
	onInput: FusionCanBeState<(((text: string?) -> string?)?)>,
	supportingText: FusionCanBeState<string?>,
	icon: FusionCanBeState<ImageData?>,
	characterLimit: FusionCanBeState<number?>,
	isError: FusionCanBeState<boolean?>,
	elevation: FusionCanBeState<number?>,
	isEnabled: FusionCanBeState<boolean?>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.tertiary(
		convert(style),
		convert(onSubmit),
		convert(label),
		convert(initialText),
		convert(onInput),
		convert(supportingText),
		convert(icon),
		convert(characterLimit),
		convert(isError),
		convert(elevation),
		convert(isEnabled)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

return Interface
