--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))
local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type OptionData = Types.OptionData
type ButtonData = Types.ButtonData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type Wrapper<BaseInstance, Definition, ClassName> = Translators.Wrapper<BaseInstance, Definition, ClassName>

export type TextWrapperDefinition = {
	OnInputEntered: (input: string) -> string,
	Label: string?,
	OptionSolver: (input: string) -> { string },
	OptionConstructor: ((key: string, onClick: (key: string) -> ()) -> GuiObject)?,
	TextColor: Color3,
	BackgroundColor: Color3,
	Elevation: number,
	SchemeType: Enums.SchemeType,
	FontData: FontData,
	Scale: number,
}
export type TextWrapper = Wrapper<GuiObject, TextWrapperDefinition, "Text">

export type StyledTextWrapperDefinition = {
	Style: Style,
	OnInputEntered: (input: string) -> string,
	Label: string?,
	OptionSolver: (input: string) -> { string },
	OptionConstructor: ((key: string, onClick: (key: string) -> ()) -> GuiObject)?,
	Elevation: number?,
}
export type StyledTextWrapper = Wrapper<GuiObject, StyledTextWrapperDefinition, "StyledText">
-- Constants
-- Variables
-- References
-- Private Functions
-- Interface
local Interface = {}

function Interface.onPrimary(): StyledTextWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		OnInputEntered = _Value(function(input: string)
			return input
		end),
		Label = _Value(nil),
		OptionSolver = _Value(function(input: string)
			return {}
		end),
		OptionConstructor = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onPrimary(
		definition.Style,
		definition.OnInputEntered,
		definition.Label,
		definition.OptionSolver,
		definition.OptionConstructor,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledText", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onSecondary(): StyledTextWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		OnInputEntered = _Value(function(input: string)
			return input
		end),
		Label = _Value(nil),
		OptionSolver = _Value(function(input: string)
			return {}
		end),
		OptionConstructor = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onSecondary(
		definition.Style,
		definition.OnInputEntered,
		definition.Label,
		definition.OptionSolver,
		definition.OptionConstructor,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledText", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onTertiary(): StyledTextWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		OnInputEntered = _Value(function(input: string)
			return input
		end),
		Label = _Value(nil),
		OptionSolver = _Value(function(input: string)
			return {}
		end),
		OptionConstructor = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onTertiary(
		definition.Style,
		definition.OnInputEntered,
		definition.Label,
		definition.OptionSolver,
		definition.OptionConstructor,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledText", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onPrimaryContainer(): StyledTextWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		OnInputEntered = _Value(function(input: string)
			return input
		end),
		Label = _Value(nil),
		OptionSolver = _Value(function(input: string)
			return {}
		end),
		OptionConstructor = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onPrimaryContainer(
		definition.Style,
		definition.OnInputEntered,
		definition.Label,
		definition.OptionSolver,
		definition.OptionConstructor,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledText", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onSecondaryContainer(): StyledTextWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		OnInputEntered = _Value(function(input: string)
			return input
		end),
		Label = _Value(nil),
		OptionSolver = _Value(function(input: string)
			return {}
		end),
		OptionConstructor = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onSecondaryContainer(
		definition.Style,
		definition.OnInputEntered,
		definition.Label,
		definition.OptionSolver,
		definition.OptionConstructor,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledText", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onTertiaryContainer(): StyledTextWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		OnInputEntered = _Value(function(input: string)
			return input
		end),
		Label = _Value(nil),
		OptionSolver = _Value(function(input: string)
			return {}
		end),
		OptionConstructor = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onTertiaryContainer(
		definition.Style,
		definition.OnInputEntered,
		definition.Label,
		definition.OptionSolver,
		definition.OptionConstructor,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledText", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

return Interface
