--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))

local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type OptionData = Types.OptionData
type ButtonData = Types.ButtonData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type Wrapper<BaseInstance, Definition, ClassName> = Translators.Wrapper<BaseInstance, Definition, ClassName>

export type BottomWrapperDefinition = {
	Buttons: { ButtonData },
	Fab: ButtonData?,
	BackgroundColor: Color3,
	IconColor: Color3,
	FabColor: Color3,
	FabIconColor: Color3,
	FabShadowColor: Color3,
	Elevation: number,
	SchemeType: Enums.SchemeType,
	FontData: FontData,
	Scale: number,
}
export type BottomWrapper = Wrapper<GuiObject, BottomWrapperDefinition, "Bottom">

export type StyledBottomWrapperDefinition = {
	Style: Style,
	Buttons: { ButtonData },
	Fab: ButtonData?,
	Elevation: number?,
}
export type StyledBottomWrapper = Wrapper<GuiObject, StyledBottomWrapperDefinition, "StyledBottom">
-- Constants
local DEFAULTS = require(script.Parent:WaitForChild("Defaults"))
-- Variables
-- References
-- Private Functions
-- Interface
local Interface = {}

function Interface.new(): StyledBottomWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Buttons = _Value({}),
		Fab = _Value(nil),
		BackgroundColor = _Value(Color3.new()),
		IconColor = _Value(Color3.new()),
		FabColor = _Value(Color3.new()),
		FabIconColor = _Value(Color3.new()),
		FabShadowColor = _Value(Color3.new()),
		Elevation = _Value(0),
		SchemeType = _Value(Enums.SchemeType.Light),
		FontData = _Value(Types.FontData.new(Font.fromEnum(Enum.Font.SourceSans), 14)),
		Scale = _Value(1),
	}
	local defaults: { [string]: unknown? } = {
		buttons = DEFAULTS.NEW.BUTTONS,
		fab = DEFAULTS.NEW.FAB,
		backgroundColor = DEFAULTS.NEW.BACKGROUND_COLOR,
		iconColor = DEFAULTS.NEW.ICON_COLOR,
		fabColor = DEFAULTS.NEW.FAB_COLOR,
		fabIconColor = DEFAULTS.NEW.FAB_ICON_COLOR,
		fabShadowColor = DEFAULTS.NEW.FAB_SHADOW_COLOR,
		elevation = DEFAULTS.NEW.ELEVATION,
		schemeType = DEFAULTS.NEW.SCHEME_TYPE,
		fontData = DEFAULTS.NEW.FONT_DATA,
		scale = DEFAULTS.NEW.SCALE,
	}
	local inst: GuiObject = Source.new(
		definition.Buttons,
		definition.Fab,
		definition.BackgroundColor,
		definition.IconColor,
		definition.FabColor,
		definition.FabIconColor,
		definition.FabShadowColor,
		definition.Elevation,
		definition.SchemeType,
		definition.FontData,
		definition.Scale
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledBottom", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.primary(): StyledBottomWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Buttons = _Value({}),
		Fab = _Value(nil),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.PRIMARY.STYLE,
		buttons = DEFAULTS.PRIMARY.BUTTONS,
		fab = DEFAULTS.PRIMARY.FAB,
		elevation = DEFAULTS.PRIMARY.ELEVATION,
	}
	local inst: GuiObject =
		Source.primary(definition.Style, definition.Buttons, definition.Fab, definition.Elevation)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledBottom", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.secondary(): StyledBottomWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Buttons = _Value({}),
		Fab = _Value(nil),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.SECONDARY.STYLE,
		buttons = DEFAULTS.SECONDARY.BUTTONS,
		fab = DEFAULTS.SECONDARY.FAB,
		elevation = DEFAULTS.SECONDARY.ELEVATION,
	}
	local inst: GuiObject =
		Source.secondary(definition.Style, definition.Buttons, definition.Fab, definition.Elevation)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledBottom", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.tertiary(): StyledBottomWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Buttons = _Value({}),
		Fab = _Value(nil),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.TERTIARY.STYLE,
		buttons = DEFAULTS.TERTIARY.BUTTONS,
		fab = DEFAULTS.TERTIARY.FAB,
		elevation = DEFAULTS.TERTIARY.ELEVATION,
	}
	local inst: GuiObject =
		Source.tertiary(definition.Style, definition.Buttons, definition.Fab, definition.Elevation)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledBottom", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

return Interface
