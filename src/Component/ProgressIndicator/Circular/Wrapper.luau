--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))
local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type Wrapper<BaseInstance, Definition, ClassName> = Translators.Wrapper<BaseInstance, Definition, ClassName>

export type CircularWrapperDefinition = {
	Progress: number?,
	IsEnabled: boolean?,
	FillColor: Color3,
	EmptyColor: Color3,
	Scale: number,
}
export type CircularWrapper = Wrapper<GuiObject, CircularWrapperDefinition, "Circular">

export type StyledCircularWrapperDefinition = {
	Style: Style,
	Progress: number?,
	IsEnabled: boolean?,
}
export type StyledCircularWrapper = Wrapper<GuiObject, StyledCircularWrapperDefinition, "StyledCircular">
-- Constants
-- Variables
-- References
-- Private Functions
-- Interface
local Interface = {}

function Interface.primary(): StyledCircularWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		Progress = _Value(nil),
		IsEnabled = _Value(nil),
	}
	local inst: GuiObject = Source.primary(definition.Style, definition.Progress, definition.IsEnabled)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledCircular", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.secondary(): StyledCircularWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		Progress = _Value(nil),
		IsEnabled = _Value(nil),
	}
	local inst: GuiObject = Source.secondary(definition.Style, definition.Progress, definition.IsEnabled)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledCircular", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.tertiary(): StyledCircularWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		Progress = _Value(nil),
		IsEnabled = _Value(nil),
	}
	local inst: GuiObject = Source.tertiary(definition.Style, definition.Progress, definition.IsEnabled)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledCircular", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

return Interface
