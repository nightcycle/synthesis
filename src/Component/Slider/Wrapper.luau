--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))
local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type OptionData = Types.OptionData
type ButtonData = Types.ButtonData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type Wrapper<BaseInstance, Definition, ClassName> = Translators.Wrapper<BaseInstance, Definition, ClassName>

export type SliderWrapperDefinition = {
	OnChange: (onChange: number) -> (),
	InitialValue: number,
	Minimum: number?,
	Maximum: number?,
	Increment: number?,
	LeftTextOrIcon: string | ImageData | nil,
	RightTextOrIcon: string | ImageData | nil,
	OnBackgroundColor: Color3,
	OnBackgroundTextColor: Color3,
	FillColor: Color3,
	FillContainerColor: Color3,
	Elevation: number,
	SchemeType: Enums.SchemeType,
	FontData: FontData,
	Scale: number,
}
export type SliderWrapper = Wrapper<GuiObject, SliderWrapperDefinition, "Slider">

export type StyledSliderWrapperDefinition = {
	Style: Style,
	OnChange: (onChange: number) -> (),
	InitialValue: number,
	Minimum: number?,
	Maximum: number?,
	Increment: number?,
	LeftTextOrIcon: string | ImageData | nil,
	RightTextOrIcon: string | ImageData | nil,
	Elevation: number,
}
export type StyledSliderWrapper = Wrapper<GuiObject, StyledSliderWrapperDefinition, "StyledSlider">
-- Constants
-- Variables
-- References
-- Private Functions
-- Interface
local Interface = {}

function Interface.primary(): StyledSliderWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		OnChange = _Value(function(onChange: number) end),
		InitialValue = _Value(50),
		Minimum = _Value(0),
		Maximum = _Value(100),
		Increment = _Value(10),
		LeftTextOrIcon = _Value(nil),
		RightTextOrIcon = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.primary(
		definition.Style,
		definition.OnChange,
		definition.InitialValue,
		definition.Minimum,
		definition.Maximum,
		definition.Increment,
		definition.LeftTextOrIcon,
		definition.RightTextOrIcon,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledSlider", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.secondary(): StyledSliderWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		OnChange = _Value(function(onChange: number) end),
		InitialValue = _Value(50),
		Minimum = _Value(0),
		Maximum = _Value(100),
		Increment = _Value(10),
		LeftTextOrIcon = _Value(nil),
		RightTextOrIcon = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.secondary(
		definition.Style,
		definition.OnChange,
		definition.InitialValue,
		definition.Minimum,
		definition.Maximum,
		definition.Increment,
		definition.LeftTextOrIcon,
		definition.RightTextOrIcon,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledSlider", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.tertiary(): StyledSliderWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		OnChange = _Value(function(onChange: number) end),
		InitialValue = _Value(50),
		Minimum = _Value(0),
		Maximum = _Value(100),
		Increment = _Value(10),
		LeftTextOrIcon = _Value(nil),
		RightTextOrIcon = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.tertiary(
		definition.Style,
		definition.OnChange,
		definition.InitialValue,
		definition.Minimum,
		definition.Maximum,
		definition.Increment,
		definition.LeftTextOrIcon,
		definition.RightTextOrIcon,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledSlider", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onPrimary(): StyledSliderWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		OnChange = _Value(function(onChange: number) end),
		InitialValue = _Value(50),
		Minimum = _Value(0),
		Maximum = _Value(100),
		Increment = _Value(10),
		LeftTextOrIcon = _Value(nil),
		RightTextOrIcon = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onPrimary(
		definition.Style,
		definition.OnChange,
		definition.InitialValue,
		definition.Minimum,
		definition.Maximum,
		definition.Increment,
		definition.LeftTextOrIcon,
		definition.RightTextOrIcon,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledSlider", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onSecondary(): StyledSliderWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		OnChange = _Value(function(onChange: number) end),
		InitialValue = _Value(50),
		Minimum = _Value(0),
		Maximum = _Value(100),
		Increment = _Value(10),
		LeftTextOrIcon = _Value(nil),
		RightTextOrIcon = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onSecondary(
		definition.Style,
		definition.OnChange,
		definition.InitialValue,
		definition.Minimum,
		definition.Maximum,
		definition.Increment,
		definition.LeftTextOrIcon,
		definition.RightTextOrIcon,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledSlider", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.onTertiary(): StyledSliderWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, "Arial", "Light", Color3.new(0, 0.4, 0.7))),
		OnChange = _Value(function(onChange: number) end),
		InitialValue = _Value(50),
		Minimum = _Value(0),
		Maximum = _Value(100),
		Increment = _Value(10),
		LeftTextOrIcon = _Value(nil),
		RightTextOrIcon = _Value(nil),
		Elevation = _Value(0),
	}
	local inst: GuiObject = Source.onTertiary(
		definition.Style,
		definition.OnChange,
		definition.InitialValue,
		definition.Minimum,
		definition.Maximum,
		definition.Increment,
		definition.LeftTextOrIcon,
		definition.RightTextOrIcon,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledSlider", inst, definition)
	maid:GiveTask(cleanUp)
	return wrapper
end

return Interface
