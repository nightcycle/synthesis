--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))
local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type FusionCanBeState<V> = Translators.FusionCanBeState<V>

-- Constants
-- Variables
-- References
-- Private Functions
-- Class
local Interface = {}

function Interface.new(
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	onBackgroundColor: FusionCanBeState<Color3>,
	onBackgroundTextColor: FusionCanBeState<Color3>,
	fillColor: FusionCanBeState<Color3>,
	fillContainerColor: FusionCanBeState<Color3>,
	elevation: FusionCanBeState<number>,
	schemeType: FusionCanBeState<Enums.SchemeType>,
	fontData: FusionCanBeState<FontData>,
	scale: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.new(
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(onBackgroundColor),
		convert(onBackgroundTextColor),
		convert(fillColor),
		convert(fillContainerColor),
		convert(elevation),
		convert(schemeType),
		convert(fontData),
		convert(scale)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.primary(
	style: FusionCanBeState<Style>,
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	elevation: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.primary(
		convert(style),
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(elevation)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.secondary(
	style: FusionCanBeState<Style>,
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	elevation: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.secondary(
		convert(style),
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(elevation)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.tertiary(
	style: FusionCanBeState<Style>,
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	elevation: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.tertiary(
		convert(style),
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(elevation)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.onPrimary(
	style: FusionCanBeState<Style>,
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	elevation: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.onPrimary(
		convert(style),
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(elevation)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.onSecondary(
	style: FusionCanBeState<Style>,
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	elevation: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.onSecondary(
		convert(style),
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(elevation)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

function Interface.onTertiary(
	style: FusionCanBeState<Style>,
	onChange: FusionCanBeState<(onChange: number) -> ()>,
	initialValue: FusionCanBeState<number>,
	minimum: FusionCanBeState<number?>,
	maximum: FusionCanBeState<number?>,
	increment: FusionCanBeState<number?>,
	leftTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	rightTextOrIcon: FusionCanBeState<string | ImageData | nil>,
	elevation: FusionCanBeState<number>
): GuiObject
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local function convert<V>(value: FusionCanBeState<V>): CanBeState<V>
		return Translators.Fusion.toColdFusion(maid, _fuse, value)
	end
	local inst = Source.onTertiary(
		convert(style),
		convert(onChange),
		convert(initialValue),
		convert(minimum),
		convert(maximum),
		convert(increment),
		convert(leftTextOrIcon),
		convert(rightTextOrIcon),
		convert(elevation)
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	return inst
end

return Interface
