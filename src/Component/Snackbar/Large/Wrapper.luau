--!strict
-- this script was generated by the build system, please do not make manual edits
local _Package = script.Parent.Parent.Parent.Parent
local _Packages = _Package.Parent
-- Services
-- Packages
local Maid = require(_Packages:WaitForChild("Maid"))
local ColdFusion = require(_Packages:WaitForChild("ColdFusion"))

-- Modules
local Types = require(_Package:WaitForChild("Types"))
local Style = require(_Package:WaitForChild("Style"))
local Enums = require(_Package:WaitForChild("Enums"))
local Translators = require(_Package:WaitForChild("Translators"))

local Source = require(script.Parent:WaitForChild("ColdFusion"))

-- Types
type Maid = Maid.Maid
type Style = Style.Style
type FontData = Types.FontData
type OptionData = Types.OptionData
type ButtonData = Types.ButtonData
type ImageData = Types.ImageData
type CanBeState<V> = ColdFusion.CanBeState<V>
type Wrapper<BaseInstance, Definition, ClassName> = Translators.Wrapper<BaseInstance, Definition, ClassName>

export type LargeWrapperDefinition = {
	Text: string,
	ButtonText: string?,
	OnButtonClick: (() -> ())?,
	OnCloseClick: (() -> ())?,
	TextColor: Color3,
	ButtonTextColor: Color3,
	BackgroundColor: Color3,
	Elevation: number,
	SchemeType: Enums.SchemeType,
	FontData: FontData,
	Scale: number,
}
export type LargeWrapper = Wrapper<GuiObject, LargeWrapperDefinition, "Large">

export type StyledLargeWrapperDefinition = {
	Style: Style,
	Text: string,
	ButtonText: string?,
	OnButtonClick: (() -> ())?,
	OnCloseClick: (() -> ())?,
	Elevation: number?,
}
export type StyledLargeWrapper = Wrapper<GuiObject, StyledLargeWrapperDefinition, "StyledLarge">
-- Constants
local DEFAULTS = require(script.Parent:WaitForChild("Defaults"))
-- Variables
-- References
-- Private Functions
-- Interface
local Interface = {}

function Interface.surfaceContainer(): StyledLargeWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Text = _Value(""),
		ButtonText = _Value("Action"),
		OnButtonClick = _Value(function() end),
		OnCloseClick = _Value(function() end),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.SURFACE_CONTAINER.STYLE,
		text = DEFAULTS.SURFACE_CONTAINER.TEXT,
		buttonText = DEFAULTS.SURFACE_CONTAINER.BUTTON_TEXT,
		onButtonClick = DEFAULTS.SURFACE_CONTAINER.ON_BUTTON_CLICK,
		onCloseClick = DEFAULTS.SURFACE_CONTAINER.ON_CLOSE_CLICK,
		elevation = DEFAULTS.SURFACE_CONTAINER.ELEVATION,
	}
	local inst: GuiObject = Source.surfaceContainer(
		definition.Style,
		definition.Text,
		definition.ButtonText,
		definition.OnButtonClick,
		definition.OnCloseClick,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledLarge", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.primaryContainer(): StyledLargeWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Text = _Value(""),
		ButtonText = _Value("Action"),
		OnButtonClick = _Value(function() end),
		OnCloseClick = _Value(function() end),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.PRIMARY_CONTAINER.STYLE,
		text = DEFAULTS.PRIMARY_CONTAINER.TEXT,
		buttonText = DEFAULTS.PRIMARY_CONTAINER.BUTTON_TEXT,
		onButtonClick = DEFAULTS.PRIMARY_CONTAINER.ON_BUTTON_CLICK,
		onCloseClick = DEFAULTS.PRIMARY_CONTAINER.ON_CLOSE_CLICK,
		elevation = DEFAULTS.PRIMARY_CONTAINER.ELEVATION,
	}
	local inst: GuiObject = Source.primaryContainer(
		definition.Style,
		definition.Text,
		definition.ButtonText,
		definition.OnButtonClick,
		definition.OnCloseClick,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledLarge", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.secondaryContainer(): StyledLargeWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Text = _Value(""),
		ButtonText = _Value("Action"),
		OnButtonClick = _Value(function() end),
		OnCloseClick = _Value(function() end),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.SECONDARY_CONTAINER.STYLE,
		text = DEFAULTS.SECONDARY_CONTAINER.TEXT,
		buttonText = DEFAULTS.SECONDARY_CONTAINER.BUTTON_TEXT,
		onButtonClick = DEFAULTS.SECONDARY_CONTAINER.ON_BUTTON_CLICK,
		onCloseClick = DEFAULTS.SECONDARY_CONTAINER.ON_CLOSE_CLICK,
		elevation = DEFAULTS.SECONDARY_CONTAINER.ELEVATION,
	}
	local inst: GuiObject = Source.secondaryContainer(
		definition.Style,
		definition.Text,
		definition.ButtonText,
		definition.OnButtonClick,
		definition.OnCloseClick,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledLarge", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

function Interface.tertiaryContainer(): StyledLargeWrapper
	local maid = Maid.new()
	local _fuse = ColdFusion.fuse(maid)
	local _Value = _fuse.Value
	local definition = {
		Style = _Value(Style.new(1, Enum.Font.SourceSans, "Light", Color3.new(0, 0.4, 0.7))),
		Text = _Value(""),
		ButtonText = _Value("Action"),
		OnButtonClick = _Value(function() end),
		OnCloseClick = _Value(function() end),
		Elevation = _Value(0),
	}
	local defaults: { [string]: unknown? } = {
		style = DEFAULTS.TERTIARY_CONTAINER.STYLE,
		text = DEFAULTS.TERTIARY_CONTAINER.TEXT,
		buttonText = DEFAULTS.TERTIARY_CONTAINER.BUTTON_TEXT,
		onButtonClick = DEFAULTS.TERTIARY_CONTAINER.ON_BUTTON_CLICK,
		onCloseClick = DEFAULTS.TERTIARY_CONTAINER.ON_CLOSE_CLICK,
		elevation = DEFAULTS.TERTIARY_CONTAINER.ELEVATION,
	}
	local inst: GuiObject = Source.tertiaryContainer(
		definition.Style,
		definition.Text,
		definition.ButtonText,
		definition.OnButtonClick,
		definition.OnCloseClick,
		definition.Elevation
	)
	maid:GiveTask(inst.Destroying:Connect(function()
		maid:Destroy()
	end))
	local wrapper, cleanUp = Translators.ColdFusion.toWrapper("StyledLarge", inst, definition, defaults)
	maid:GiveTask(cleanUp)
	return wrapper
end

return Interface
